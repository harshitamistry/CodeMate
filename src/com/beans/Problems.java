package com.beans;
// Generated 5-Nov-2016 11:07:12 PM by Hibernate Tools 5.2.0.Beta1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Problems generated by hbm2java
 */
@Entity
@Table(name = "problems", catalog = "hibernateCodeMate")

@NamedQueries({
		@NamedQuery(name = "Problems.problemDetails", query = "select p from Problems p JOIN p.tutorials t where t.tutorialId = :tutId"),
		@NamedQuery(name = "Problems.allProblems", query = "from Problems where problemType = :problemType"),
		@NamedQuery(name = "Problems.contestPoints", query = "select sum(p.problemPoints) from Problems p JOIN p.contests c where c.contestId=:contestID"),
		@NamedQuery(name = "Problems.getProblem", query = "from Problems where problemId=:problemId") })
public class Problems implements java.io.Serializable {

	private Integer problemId;
	private String problemName;
	private String problemType;
	private String problemQuestion;
	private int problemPoints;
	private String hint;
	private String solution;
	private String complexity;
	private Set<Problemresult> problemresults = new HashSet<Problemresult>(0);
	private Set<Testcases> testcaseses = new HashSet<Testcases>(0);
	private Set<Tutorial> tutorials = new HashSet<Tutorial>(0);
	private Set<Contest> contests = new HashSet<Contest>(0);
	private Set<Submission> submissions = new HashSet<Submission>(0);

	public Problems() {
	}

	public Problems(String problemName, String problemType,
			String problemQuestion, int problemPoints, String hint,
			String solution, String complexity) {
		this.problemName = problemName;
		this.problemType = problemType;
		this.problemQuestion = problemQuestion;
		this.problemPoints = problemPoints;
		this.hint = hint;
		this.solution = solution;
		this.complexity = complexity;
	}

	public Problems(String problemName, String problemType,
			String problemQuestion, int problemPoints, String hint,
			String solution, String complexity,
			Set<Problemresult> problemresults, Set<Testcases> testcaseses,
			Set<Tutorial> tutorials, Set<Contest> contests,
			Set<Submission> submissions) {
		this.problemName = problemName;
		this.problemType = problemType;
		this.problemQuestion = problemQuestion;
		this.problemPoints = problemPoints;
		this.hint = hint;
		this.solution = solution;
		this.complexity = complexity;
		this.problemresults = problemresults;
		this.testcaseses = testcaseses;
		this.tutorials = tutorials;
		this.contests = contests;
		this.submissions = submissions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ProblemID", unique = true, nullable = false)
	public Integer getProblemId() {
		return this.problemId;
	}

	public void setProblemId(Integer problemId) {
		this.problemId = problemId;
	}

	@Column(name = "ProblemName", nullable = false)
	public String getProblemName() {
		return this.problemName;
	}

	public void setProblemName(String problemName) {
		this.problemName = problemName;
	}

	@Column(name = "ProblemType", nullable = false, length = 9)
	public String getProblemType() {
		return this.problemType;
	}

	public void setProblemType(String problemType) {
		this.problemType = problemType;
	}

	@Column(name = "ProblemQuestion", nullable = false, length = 65535)
	public String getProblemQuestion() {
		return this.problemQuestion;
	}

	public void setProblemQuestion(String problemQuestion) {
		this.problemQuestion = problemQuestion;
	}

	@Column(name = "ProblemPoints", nullable = false)
	public int getProblemPoints() {
		return this.problemPoints;
	}

	public void setProblemPoints(int problemPoints) {
		this.problemPoints = problemPoints;
	}

	@Column(name = "Hint", nullable = false, length = 65535)
	public String getHint() {
		return this.hint;
	}

	public void setHint(String hint) {
		this.hint = hint;
	}

	@Column(name = "Solution", nullable = false, length = 65535)
	public String getSolution() {
		return this.solution;
	}

	public void setSolution(String solution) {
		this.solution = solution;
	}

	@Column(name = "Complexity", nullable = false, length = 6)
	public String getComplexity() {
		return this.complexity;
	}

	public void setComplexity(String complexity) {
		this.complexity = complexity;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problems")
	public Set<Problemresult> getProblemresults() {
		return this.problemresults;
	}

	public void setProblemresults(Set<Problemresult> problemresults) {
		this.problemresults = problemresults;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problems")
	public Set<Testcases> getTestcaseses() {
		return this.testcaseses;
	}

	public void setTestcaseses(Set<Testcases> testcaseses) {
		this.testcaseses = testcaseses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "exerciseproblem", catalog = "hibernateCodeMate", joinColumns = {
			@JoinColumn(name = "ProblemID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "TutorialID", nullable = false, updatable = false) })
	public Set<Tutorial> getTutorials() {
		return this.tutorials;
	}

	public void setTutorials(Set<Tutorial> tutorials) {
		this.tutorials = tutorials;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "contestproblem", catalog = "hibernateCodeMate", joinColumns = {
			@JoinColumn(name = "ProblemID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ContestID", nullable = false, updatable = false) })
	public Set<Contest> getContests() {
		return this.contests;
	}

	public void setContests(Set<Contest> contests) {
		this.contests = contests;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problems")
	public Set<Submission> getSubmissions() {
		return this.submissions;
	}

	public void setSubmissions(Set<Submission> submissions) {
		this.submissions = submissions;
	}

}
