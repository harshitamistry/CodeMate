package com.beans;
// Generated 5-Nov-2016 11:07:12 PM by Hibernate Tools 5.2.0.Beta1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Tutorial generated by hbm2java
 */
@Entity
@Table(name = "tutorial", catalog = "hibernateCodeMate")
@NamedQueries({
		@NamedQuery(name = "Tutorial.allTutorial", query = "from Tutorial"),
		@NamedQuery(name = "Tutorial.tutorialCount", query = "Select max(tutorialId) from Tutorial"),
		@NamedQuery(name = "Tutorial.tutorialDetails", query = "from Tutorial where tutorialId = :tutId") })
public class Tutorial implements java.io.Serializable {

	private Integer tutorialId;
	private String tutorialName;
	private String tutorialContent;
	private String tutorialDescription;
	private String tutorialType;
	private Set<Problems> problemses = new HashSet<Problems>(0);
	private Set<User> users = new HashSet<User>(0);
	private Set<Images> imageses = new HashSet<Images>(0);

	public Tutorial() {
	}

	public Tutorial(String tutorialName, String tutorialContent,
			String tutorialType) {
		this.tutorialName = tutorialName;
		this.tutorialContent = tutorialContent;
		this.tutorialType = tutorialType;
	}

	public Tutorial(String tutorialName, String tutorialContent,
			String tutorialDescription, String tutorialType,
			Set<Problems> problemses, Set<User> users, Set<Images> imageses) {
		this.tutorialName = tutorialName;
		this.tutorialContent = tutorialContent;
		this.tutorialDescription = tutorialDescription;
		this.tutorialType = tutorialType;
		this.problemses = problemses;
		this.users = users;
		this.imageses = imageses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "TutorialID", unique = true, nullable = false)
	public Integer getTutorialId() {
		return this.tutorialId;
	}

	public void setTutorialId(Integer tutorialId) {
		this.tutorialId = tutorialId;
	}

	@Column(name = "TutorialName", nullable = false)
	public String getTutorialName() {
		return this.tutorialName;
	}

	public void setTutorialName(String tutorialName) {
		this.tutorialName = tutorialName;
	}

	@Column(name = "TutorialContent", nullable = false, length = 65535)
	public String getTutorialContent() {
		return this.tutorialContent;
	}

	public void setTutorialContent(String tutorialContent) {
		this.tutorialContent = tutorialContent;
	}

	@Column(name = "TutorialDescription", length = 65535)
	public String getTutorialDescription() {
		return this.tutorialDescription;
	}

	public void setTutorialDescription(String tutorialDescription) {
		this.tutorialDescription = tutorialDescription;
	}

	@Column(name = "TutorialType", nullable = false, length = 8)
	public String getTutorialType() {
		return this.tutorialType;
	}

	public void setTutorialType(String tutorialType) {
		this.tutorialType = tutorialType;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "tutorials")
	public Set<Problems> getProblemses() {
		return this.problemses;
	}

	public void setProblemses(Set<Problems> problemses) {
		this.problemses = problemses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tutorial")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "tutorialimages", catalog = "hibernateCodeMate", joinColumns = {
			@JoinColumn(name = "tutorialID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "imageid", nullable = false, updatable = false) })
	public Set<Images> getImageses() {
		return this.imageses;
	}

	public void setImageses(Set<Images> imageses) {
		this.imageses = imageses;
	}

}
