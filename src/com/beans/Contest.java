package com.beans;
// Generated 5-Nov-2016 11:07:12 PM by Hibernate Tools 5.2.0.Beta1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Contest generated by hbm2java
 */
@Entity
@Table(name = "contest", catalog = "hibernateCodeMate")
@NamedQueries({
		@NamedQuery(name = "Contest.allContest", query = "from Contest"),
		@NamedQuery(name = "Contest.getContest", query = "from Contest where contestId=:contestId"),
		@NamedQuery(name = "Contest.getProblems", query = "select c.problemses from Contest c where c.contestId=:contestId") })
public class Contest implements java.io.Serializable {

	private Integer contestId;
	private String contestName;
	private Date contestStartDate;
	private Date contestEndDate;
	private String contestType;
	private int maxGroupMembers;
	private Set<Contestgroup> contestgroups = new HashSet<Contestgroup>(0);
	private Set<Problems> problemses = new HashSet<Problems>(0);
	private Set<Submission> submissions = new HashSet<Submission>(0);

	public Contest() {
	}

	public Contest(String contestName, Date contestStartDate,
			Date contestEndDate, String contestType, int maxGroupMembers) {
		this.contestName = contestName;
		this.contestStartDate = contestStartDate;
		this.contestEndDate = contestEndDate;
		this.contestType = contestType;
		this.maxGroupMembers = maxGroupMembers;
	}

	public Contest(String contestName, Date contestStartDate,
			Date contestEndDate, String contestType, int maxGroupMembers,
			Set<Contestgroup> contestgroups, Set<Problems> problemses,
			Set<Submission> submissions) {
		this.contestName = contestName;
		this.contestStartDate = contestStartDate;
		this.contestEndDate = contestEndDate;
		this.contestType = contestType;
		this.maxGroupMembers = maxGroupMembers;
		this.contestgroups = contestgroups;
		this.problemses = problemses;
		this.submissions = submissions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ContestID", unique = true, nullable = false)
	public Integer getContestId() {
		return this.contestId;
	}

	public void setContestId(Integer contestId) {
		this.contestId = contestId;
	}

	@Column(name = "ContestName", nullable = false)
	public String getContestName() {
		return this.contestName;
	}

	public void setContestName(String contestName) {
		this.contestName = contestName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ContestStartDate", nullable = false, length = 19)
	public Date getContestStartDate() {
		return this.contestStartDate;
	}

	public void setContestStartDate(Date contestStartDate) {
		this.contestStartDate = contestStartDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ContestEndDate", nullable = false, length = 19)
	public Date getContestEndDate() {
		return this.contestEndDate;
	}

	public void setContestEndDate(Date contestEndDate) {
		this.contestEndDate = contestEndDate;
	}

	@Column(name = "ContestType", nullable = false, length = 11)
	public String getContestType() {
		return this.contestType;
	}

	public void setContestType(String contestType) {
		this.contestType = contestType;
	}

	@Column(name = "MaxGroupMembers", nullable = false)
	public int getMaxGroupMembers() {
		return this.maxGroupMembers;
	}

	public void setMaxGroupMembers(int maxGroupMembers) {
		this.maxGroupMembers = maxGroupMembers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contest")
	public Set<Contestgroup> getContestgroups() {
		return this.contestgroups;
	}

	public void setContestgroups(Set<Contestgroup> contestgroups) {
		this.contestgroups = contestgroups;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "contests")
	public Set<Problems> getProblemses() {
		return this.problemses;
	}

	public void setProblemses(Set<Problems> problemses) {
		this.problemses = problemses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contest")
	public Set<Submission> getSubmissions() {
		return this.submissions;
	}

	public void setSubmissions(Set<Submission> submissions) {
		this.submissions = submissions;
	}

}
