package com.beans;
// Generated 5-Nov-2016 11:07:12 PM by Hibernate Tools 5.2.0.Beta1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * School generated by hbm2java
 */
@Entity
@Table(name = "school", catalog = "hibernateCodeMate")
@NamedQueries({
		@NamedQuery(name = "School.countrySchool", query = "select s from School s JOIN s.country c where c.countryName = 'Canada'") })
public class School implements java.io.Serializable {

	private Integer schoolId;

	private Country country;
	private String schoolName;
	private String schoolCity;
	private Set<User> users = new HashSet<User>(0);

	public School() {
	}

	public School(Country country, String schoolName, String schoolCity) {
		this.country = country;
		this.schoolName = schoolName;
		this.schoolCity = schoolCity;
	}

	public School(Country country, String schoolName, String schoolCity,
			Set<User> users) {
		this.country = country;
		this.schoolName = schoolName;
		this.schoolCity = schoolCity;
		this.users = users;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "SchoolID", unique = true, nullable = false)
	public Integer getSchoolId() {
		return this.schoolId;
	}

	public void setSchoolId(Integer schoolId) {
		this.schoolId = schoolId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CountryID", nullable = false)
	public Country getCountry() {
		return this.country;
	}

	public void setCountry(Country country) {
		this.country = country;
	}

	@Column(name = "SchoolName", nullable = false)
	public String getSchoolName() {
		return this.schoolName;
	}

	public void setSchoolName(String schoolName) {
		this.schoolName = schoolName;
	}

	@Column(name = "SchoolCity", nullable = false)
	public String getSchoolCity() {
		return this.schoolCity;
	}

	public void setSchoolCity(String schoolCity) {
		this.schoolCity = schoolCity;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "school")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

}
