package com.beans;
// Generated 5-Nov-2016 11:07:12 PM by Hibernate Tools 5.2.0.Beta1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * Forumanswer generated by hbm2java
 */
@Entity
@Table(name = "forumanswer", catalog = "hibernateCodeMate")
@NamedQueries({
		@NamedQuery(name = "Forumanswer.allAnswers", query = "select f from Forumanswer f where f.id.questionId=:questionId") })
public class Forumanswer implements java.io.Serializable {

	private ForumanswerId id;
	private Forumquestion forumquestion;
	private User user;

	public Forumanswer() {
	}

	public Forumanswer(ForumanswerId id, Forumquestion forumquestion,
			User user) {
		this.id = id;
		this.forumquestion = forumquestion;
		this.user = user;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "questionId", column = @Column(name = "QuestionID", nullable = false)),
			@AttributeOverride(name = "answer", column = @Column(name = "Answer", nullable = false, length = 65535)),
			@AttributeOverride(name = "userId", column = @Column(name = "UserID", nullable = false)) })
	public ForumanswerId getId() {
		return this.id;
	}

	public void setId(ForumanswerId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QuestionID", nullable = false, insertable = false, updatable = false)
	public Forumquestion getForumquestion() {
		return this.forumquestion;
	}

	public void setForumquestion(Forumquestion forumquestion) {
		this.forumquestion = forumquestion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UserID", nullable = false, insertable = false, updatable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

}
